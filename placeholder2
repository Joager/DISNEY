#include <iostream>
#include <conio.h>
#include <stdio.h>
#include <stdlib.h>
#include <dos.h>
#include <fstream>
#include "Console.h"

#define MAP_X 20
#define MAP_Y 15 
#define TURF_GRASS 0
#define TURF_TREE 2
#define TURF_WALL 1

// pra fazer
// >> testar new/save/load

using namespace std;

string lugar;
string comecar;
int hp;
int mp;
int gold;
int level;
int xp;
int maxxp;

void run();
void menu();
void saveGame();
void loadGame();
void loadStage();
void move();
void generateMap();

int main() {
    menu();
    return 0;
}

void menu() {
     cout << "titulo do jogo rs\nDigite new para comecar um novo jogo\n" << "Digite load para carregar um jogo\n"; 
     cin >> comecar;
     if (comecar == "new" || comecar == "New") {
                 run();
                 }
     else if (comecar == "load" || comecar == "Load") {
          loadGame();
          }
     }
     
void run() {
	cout << "Carregando jogo...\n";
	lugar = "GrassyFields";
	hp = 10;
	mp = 10;
	gold = 0;
	level = 1;
	xp = 0;
	maxxp = 10;
	saveGame();
	generateMap();
}

/*void move(char key) {
	    /
      W
    A + D
      S

      1
    4 + 2
      3
       /
    switch (key) {
    case 'w':
        if (direction != 2) direction = 0;
        break;
    case 'd':
        if (direction != 3) direction = 1;
        break;
    case 's':
        if (direction != 4) direction = 2;
        break;
    case 'a':
        if (direction != 5) direction = 3;
        break;
	}
}
*/

/* 
   -  Codigo de mapas  -
*/

void generateMap() {
     int nGrassyArray[MAP_Y][MAP_X] = {
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
};
     if (lugar == "GrassyFields") {
        for (int y = 0; y < MAP_Y; y++) {
            for (int x =0; x < MAP_X; x++) {
                switch (nGrassyArray[y][x]) {
                       case TURF_GRASS:
                            console.Color(7);
                            console << '0';
                            break;
                       case TURF_TREE:
                            console.Color(7);
                            console << 'T';
                            break;
                       case TURF_WALL:
                            console.Color(8);
                            console << '1';
                            break;
                            }
                       }
                  }
        }
        }

/* 
Codigo de save game:
   Location =
   HP =
   MP =
   Gold =
   LV =
   XP =
   MAXXP =
*/
void saveGame() {
     ofstream file1("LunaSave.txt");
     file1 << lugar << endl; 
     file1 << hp << endl; 
     file1 << mp << endl; 
     file1 << gold << endl; 
     file1 << level << endl; 
     file1 << xp << endl; 
     file1 << maxxp << endl;
     file1.close();
     cout  << "Game saved to LunaSave.txt\n";
}
void loadGame() {
	ifstream file1;
    file1.open ("LunaSave.txt");
    file1 >> lugar;
    cout << "Teste " << lugar;
    file1 >> hp;
    cout << "Teste " << hp;
    file1 >> mp;
    cout << "Teste " << mp;
    file1 >> gold;
    cout << "Teste " << gold;
    file1 >> level; 
    cout << "Teste " << level;
    file1 >> xp;
    cout << "Teste " << xp;
    file1 >> maxxp;
    cout << "Teste " << maxxp;
    file1.close();
    generateMap();
    cout  << "Game loaded from LunaSave.txt";
}
